/*
 * This file is generated by jOOQ.
 */
package com.wuda.tester.mysql.orm.tables.records;


import com.wuda.tester.mysql.orm.tables.StoreGeneral;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * 店铺基本信息
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StoreGeneralRecord extends UpdatableRecordImpl<StoreGeneralRecord> implements Record8<ULong, ULong, String, LocalDateTime, ULong, LocalDateTime, ULong, ULong> {

    private static final long serialVersionUID = -952686910;

    /**
     * Setter for <code>mysql_tester.store_general.store_general_id</code>.
     */
    public void setStoreGeneralId(ULong value) {
        set(0, value);
    }

    /**
     * Getter for <code>mysql_tester.store_general.store_general_id</code>.
     */
    public ULong getStoreGeneralId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>mysql_tester.store_general.store_id</code>. 主键
     */
    public void setStoreId(ULong value) {
        set(1, value);
    }

    /**
     * Getter for <code>mysql_tester.store_general.store_id</code>. 主键
     */
    public ULong getStoreId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>mysql_tester.store_general.store_name</code>. 店铺名称
     */
    public void setStoreName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>mysql_tester.store_general.store_name</code>. 店铺名称
     */
    public String getStoreName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mysql_tester.store_general.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>mysql_tester.store_general.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>mysql_tester.store_general.create_user_id</code>.
     */
    public void setCreateUserId(ULong value) {
        set(4, value);
    }

    /**
     * Getter for <code>mysql_tester.store_general.create_user_id</code>.
     */
    public ULong getCreateUserId() {
        return (ULong) get(4);
    }

    /**
     * Setter for <code>mysql_tester.store_general.last_modify_time</code>.
     */
    public void setLastModifyTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>mysql_tester.store_general.last_modify_time</code>.
     */
    public LocalDateTime getLastModifyTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>mysql_tester.store_general.last_modify_user_id</code>.
     */
    public void setLastModifyUserId(ULong value) {
        set(6, value);
    }

    /**
     * Getter for <code>mysql_tester.store_general.last_modify_user_id</code>.
     */
    public ULong getLastModifyUserId() {
        return (ULong) get(6);
    }

    /**
     * Setter for <code>mysql_tester.store_general.is_deleted</code>.
     */
    public void setIsDeleted(ULong value) {
        set(7, value);
    }

    /**
     * Getter for <code>mysql_tester.store_general.is_deleted</code>.
     */
    public ULong getIsDeleted() {
        return (ULong) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<ULong, ULong, String, LocalDateTime, ULong, LocalDateTime, ULong, ULong> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<ULong, ULong, String, LocalDateTime, ULong, LocalDateTime, ULong, ULong> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<ULong> field1() {
        return StoreGeneral.STORE_GENERAL.STORE_GENERAL_ID;
    }

    @Override
    public Field<ULong> field2() {
        return StoreGeneral.STORE_GENERAL.STORE_ID;
    }

    @Override
    public Field<String> field3() {
        return StoreGeneral.STORE_GENERAL.STORE_NAME;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return StoreGeneral.STORE_GENERAL.CREATE_TIME;
    }

    @Override
    public Field<ULong> field5() {
        return StoreGeneral.STORE_GENERAL.CREATE_USER_ID;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return StoreGeneral.STORE_GENERAL.LAST_MODIFY_TIME;
    }

    @Override
    public Field<ULong> field7() {
        return StoreGeneral.STORE_GENERAL.LAST_MODIFY_USER_ID;
    }

    @Override
    public Field<ULong> field8() {
        return StoreGeneral.STORE_GENERAL.IS_DELETED;
    }

    @Override
    public ULong component1() {
        return getStoreGeneralId();
    }

    @Override
    public ULong component2() {
        return getStoreId();
    }

    @Override
    public String component3() {
        return getStoreName();
    }

    @Override
    public LocalDateTime component4() {
        return getCreateTime();
    }

    @Override
    public ULong component5() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime component6() {
        return getLastModifyTime();
    }

    @Override
    public ULong component7() {
        return getLastModifyUserId();
    }

    @Override
    public ULong component8() {
        return getIsDeleted();
    }

    @Override
    public ULong value1() {
        return getStoreGeneralId();
    }

    @Override
    public ULong value2() {
        return getStoreId();
    }

    @Override
    public String value3() {
        return getStoreName();
    }

    @Override
    public LocalDateTime value4() {
        return getCreateTime();
    }

    @Override
    public ULong value5() {
        return getCreateUserId();
    }

    @Override
    public LocalDateTime value6() {
        return getLastModifyTime();
    }

    @Override
    public ULong value7() {
        return getLastModifyUserId();
    }

    @Override
    public ULong value8() {
        return getIsDeleted();
    }

    @Override
    public StoreGeneralRecord value1(ULong value) {
        setStoreGeneralId(value);
        return this;
    }

    @Override
    public StoreGeneralRecord value2(ULong value) {
        setStoreId(value);
        return this;
    }

    @Override
    public StoreGeneralRecord value3(String value) {
        setStoreName(value);
        return this;
    }

    @Override
    public StoreGeneralRecord value4(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public StoreGeneralRecord value5(ULong value) {
        setCreateUserId(value);
        return this;
    }

    @Override
    public StoreGeneralRecord value6(LocalDateTime value) {
        setLastModifyTime(value);
        return this;
    }

    @Override
    public StoreGeneralRecord value7(ULong value) {
        setLastModifyUserId(value);
        return this;
    }

    @Override
    public StoreGeneralRecord value8(ULong value) {
        setIsDeleted(value);
        return this;
    }

    @Override
    public StoreGeneralRecord values(ULong value1, ULong value2, String value3, LocalDateTime value4, ULong value5, LocalDateTime value6, ULong value7, ULong value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StoreGeneralRecord
     */
    public StoreGeneralRecord() {
        super(StoreGeneral.STORE_GENERAL);
    }

    /**
     * Create a detached, initialised StoreGeneralRecord
     */
    public StoreGeneralRecord(ULong storeGeneralId, ULong storeId, String storeName, LocalDateTime createTime, ULong createUserId, LocalDateTime lastModifyTime, ULong lastModifyUserId, ULong isDeleted) {
        super(StoreGeneral.STORE_GENERAL);

        set(0, storeGeneralId);
        set(1, storeId);
        set(2, storeName);
        set(3, createTime);
        set(4, createUserId);
        set(5, lastModifyTime);
        set(6, lastModifyUserId);
        set(7, isDeleted);
    }
}
